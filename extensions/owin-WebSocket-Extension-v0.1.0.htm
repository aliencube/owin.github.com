<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:normal;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:normal;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:90%;
	font-size:28.0pt;
	font-family:"Cambria","serif";
	color:#404040;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-link:"Title Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:90%;
	font-size:28.0pt;
	font-family:"Cambria","serif";
	color:#404040;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-link:"Title Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:90%;
	font-size:28.0pt;
	font-family:"Cambria","serif";
	color:#404040;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-link:"Title Char";
	margin:0in;
	margin-bottom:.0001pt;
	line-height:90%;
	font-size:28.0pt;
	font-family:"Cambria","serif";
	color:#404040;
	letter-spacing:-.5pt;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Cambria","serif";
	color:#404040;
	letter-spacing:-.5pt;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Cambria","serif";
	color:#365F91;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Cambria","serif";
	color:#365F91;}
.MsoChpDefault
	{font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple>

<div class=WordSection1>

<p class=MsoTitle>OWIN WebSocket Extension v0.1.0</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Authors: The OWIN working group</p>

<p class=MsoNormal>Last Modified: 6 August 2012</p>

<h1>Contents</h1>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span
style='font-size:12.0pt;line-height:115%;color:black'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;line-height:115%;color:black'>Introduction</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-size:12.0pt;line-height:115%;color:black'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;line-height:115%;color:black'>Definitions</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-size:12.0pt;line-height:115%;color:black'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;line-height:115%;color:black'>Scenarios</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-size:12.0pt;line-height:115%;color:black'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;line-height:115%;color:black'>Keys</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><span
style='font-size:12.0pt;line-height:115%;color:black'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:12.0pt;line-height:115%;color:black'>Delegate
Signature &amp; Usage</span></p>

<h1 style='margin-left:.5in;text-indent:-.25in'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Introduction</h1>

<p class=MsoNormal><span style='font-size:12.0pt;line-height:115%;color:black'>This
document outlines the recommended patterns for using WebSockets through the
OWIN interface. It depends on OWIN version 0.12.0 (but may work with other
versions), and uses the extension key mechanics as outlined in CommonKeys.html.</span></p>

<h1 style='margin-left:.5in;text-indent:-.25in'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Definitions</h1>

<p class=MsoNormal><span style='font-size:12.0pt;line-height:115%;color:black'>WebSocket
- Defined in RFC 6455, a web socket is a bidirectional, framed communication
channel that uses HTTP for its initial handshake.</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;line-height:115%;color:black'>Opaque
Mode - some servers allow a request to take direct ownership of the underlying
connection after the initial HTTP handshake. This gives the application access
to a bidirectional stream and the application is then responsible for employing
its own protocol (e.g.  WebSockets) to communicate with the client.</span></p>

<h1 style='margin-left:.5in;text-indent:-.25in'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Scenarios</h1>

<p class=MsoNormal><span style='font-size:12.0pt;line-height:115%;color:black'>There
are four main scenarios defined for using WebSockets semantics via OWIN, each
depending on what support the server provides and what functionality the
application requires.</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;line-height:115%;color:black'>At
startup the server SHOULD advertise via keys in the IAppBuilder Properties dictionary
what capabilities it supports.  See the list of recommended </span><a
href="#_4._Keys"><span style='font-size:12.0pt;line-height:115%'>Keys</span></a><span
style='font-size:12.0pt;line-height:115%;color:black'> below.  This
advertisement helps the application build a pipeline that fits its needs.</span></p>

<h2 style='margin-left:40.5pt;text-indent:-22.5pt'>3.1.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span>The application needs WebSocket access and the server supports it.</h2>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>When a WebSocket capable server identifies an incoming as
WebSocket compatible request (via headers, etc.) it SHOULD indicate this to the
application by adding the appropriate key and value to the Environment
dictionary (see <a href="#_4._Keys">Keys</a>).  </p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Applications that see this key and want to complete the upgrade
to WebSockets can indicate this to the server by returning a 101 status code
and adding a WebSocket body delegate to the response Properties dictionary (see
<a href="#_4._Keys">Keys</a>, <a href="#_5._Delegate_Signature">Delegate Signature
&amp; Usage</a>).  </p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>The normal response body delegate field SHOULD be set to null.  </p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The server then performs the upgrade and invokes the given
delegate.</p>

<h2 style='margin-left:40.5pt;text-indent:-22.5pt'>3.2.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span>The application needs opaque stream access and the server supports it.</h2>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>When the server identifies a request that can be upgraded to an
opaque stream, it SHOULD indicate this to the application by adding the
appropriate key and value to the Environment dictionary (see <a href="#_4._Keys">Keys</a>). 
</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Applications that see this key and want to complete the upgrade
to an opaque stream can indicate this to the server by adding the appropriate
key and value to the response Properties dictionary (see <a href="#_4._Keys">Keys</a>)
and returning the appropriate status code (normally 101).  </p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>A normal response body delegate should be used for this scenario.</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The server then performs the upgrade and invokes the response
body delegate with the opaque stream.</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The application can confirm that the upgrade succeeded by
verifying that both the CanRead and CanWrite properties on given stream a true.</p>

<h2 style='margin-left:40.5pt;text-indent:-22.5pt'>3.3.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span>The application needs WebSocket access, but the server only supports
opaque streams.</h2>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>At startup the application detects from the IAppBuilder Properties
dictionary that the server supports opaque streams and inserts a WebSocket
capable middleware.</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The middleware will inspect incoming requests and see if any
marked as opaque upgradable are also WebSocket compatible.  If so it will add
the appropriate key to the Environment dictionary (see <a href="#_4._Keys">Keys</a>).</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The application functions the same as if the server was providing
WebSocket support directly.  It inspects the Environment dictionary keys to
identify WebSocket capable requests, returns a 101 status code, and provides a
WebSocket body delegate.</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The middleware intercepts the response, provides the appropriate
opaque stream upgrade key in the response Properties dictionary, and provides a
normal body delegate.</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The server then performs the upgrade and invokes the middlewares
response body delegate with the opaque stream.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Servers that do not directly support WebSockets SHOULD ignore the
WebSocket body delegate in the response Properties dictionary.</p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The middleware wraps the opaque stream and invokes the
applications WebSocket body delegate.</p>

<h2 style='margin-left:40.5pt;text-indent:-22.5pt'>3.4.<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span>The application needs opaque stream access but the server only supports WebSockets.</h2>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>At startup the application detects from the IAppBuilder
Properties dictionary that the server supports WebSockets and inserts an opaque
stream compatible middlware.</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The middleware ill inspect incoming requests and see if any are
marked as WebSocket compatible.  If so it will add the appropriate opaque
stream key to the request Environment dictionary (see <a href="#_4._Keys">Keys</a>).</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The application functions the same as if the server was providing
opaque stream support directly.  It inspects the Environment dictionary keys to
identify opaque stream capable requests, adds the appropriate key to the
response Properties dictionary (see <a href="#_4._Keys">Keys</a>), provides a
normal response body delegate, and returns an appropriate status code.</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The middleware intercepts the response and provides its own
WebSocket body delegate in the Properties dictionary.</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The server then performs the upgrade and invokes the middlewares
WebSocket body delegate.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>If the server directly supports WebSockets, it should prefer a
given WebSocket body delegate over any response body delegate provided (even if
opaque streams also appear to be requested).</p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>The middleware uses the WebSocket body delegate components to
create an opaque stream wrapper and invokes the applications normal response
body delegate.</p>

<p class=MsoListParagraphCxSpLast style='margin-left:1.0in;text-indent:-.25in'><span
style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>The opaque stream wrapper around the WebSocket body delegate may
choose its own message sizing strategy (e.g. every write may set the
EndOfMessage flag).</p>

<h1><a name="_4._Keys"></a>4. Keys</h1>

<p class=MsoNormal>The following keys and values are defined according to the
guidelines provided in CommonKeys.html.  Key names and string values MUST be
compared as Ordinal, case sensitive.</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=203 valign=top style='width:152.2pt;border:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>Key Name</p>
  </td>
  <td width=83 valign=top style='width:62.2pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>Type</p>
  </td>
  <td width=345 valign=top style='width:259.0pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>Description</p>
  </td>
 </tr>
 <tr>
  <td width=203 valign=top style='width:152.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>websocket.Support</p>
  </td>
  <td width=83 valign=top style='width:62.2pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>string[]</p>
  </td>
  <td width=345 valign=top style='width:259.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>A server may support multiple options simultaneously.</p>
  <p class=MsoListParagraphCxSpFirst style='margin-bottom:0in;margin-bottom:
  .0001pt;text-indent:-.25in;line-height:normal'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>WebSocket Used in the IAppBuilder Properties dictionary to
  indicate general WebSocket support.  Used in the request Environment
  dictionary to indicate a WebSocket compatible request.</p>
  <p class=MsoListParagraphCxSpLast style='margin-bottom:0in;margin-bottom:
  .0001pt;text-indent:-.25in;line-height:normal'><span style='font-family:Symbol'>·<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>OpaqueStream Used in the IAppBuilder Properties dictionary to
  indicate general support for opaque streams.  Used in the request Environment
  dictionary to indicate an opaque stream compatible request.</p>
  </td>
 </tr>
 <tr>
  <td width=203 valign=top style='width:152.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>websocket.BodyFunc</p>
  </td>
  <td width=83 valign=top style='width:62.2pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>Func&lt;...&gt;</p>
  </td>
  <td width=345 valign=top style='width:259.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>Used in the response Properties dictionary to request that the server
  upgrade to a WebSocket and invoke this delegate.  See <a href="#_4._Keys">Delegate
  Signature &amp; Usage</a>.</p>
  </td>
 </tr>
 <tr>
  <td width=203 valign=top style='width:152.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>websocket.Upgrade</p>
  </td>
  <td width=83 valign=top style='width:62.2pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>string</p>
  </td>
  <td width=345 valign=top style='width:259.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>OpaqueStream Used in the response Properties dictionary to request
  that the server upgrade to an opaque stream via the response body delegate.</p>
  </td>
 </tr>
 <tr>
  <td width=203 valign=top style='width:152.2pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>webSocket.SubProtocol</p>
  </td>
  <td width=83 valign=top style='width:62.2pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>String</p>
  </td>
  <td width=345 valign=top style='width:259.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0in;margin-bottom:.0001pt;line-height:
  normal'>?? Should this just go in the response header?</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<h1><a name="_5._Delegate_Func"></a><a name="_5._Delegate_Signature"></a>5. Delegate
Signature &amp; Usage</h1>

<p class=MsoNormal>The WebSocket body delegate signature is as follows:</p>

<p class=MsoNoSpacing>using WebSocketAction = </p>

<p class=MsoNoSpacing>        Func</p>

<p class=MsoNoSpacing>        &lt; </p>

<p class=MsoNoSpacing>            Func // SendAsync</p>

<p class=MsoNoSpacing>            &lt;</p>

<p class=MsoNoSpacing>                ArraySegment&lt;byte&gt; /* data */,</p>

<p class=MsoNoSpacing>                int /* messageType */,</p>

<p class=MsoNoSpacing>                bool /* endOfMessage */,</p>

<p class=MsoNoSpacing>                CancellationToken /* cancel */,</p>

<p class=MsoNoSpacing>                Task</p>

<p class=MsoNoSpacing>            &gt;,</p>

<p class=MsoNoSpacing>            Func // ReceiveAsync</p>

<p class=MsoNoSpacing>            &lt;</p>

<p class=MsoNoSpacing>                ArraySegment&lt;byte&gt; /* data */, </p>

<p class=MsoNoSpacing>                CancellationToken /* cancel */,</p>

<p class=MsoNoSpacing>                Task</p>

<p class=MsoNoSpacing>                &lt;</p>

<p class=MsoNoSpacing>                    Tuple</p>

<p class=MsoNoSpacing>                    &lt;</p>

<p class=MsoNoSpacing>                        int /* messageType */,</p>

<p class=MsoNoSpacing>                        bool /* endOfMessage */,</p>

<p class=MsoNoSpacing>                        int? /* count */,</p>

<p class=MsoNoSpacing>                        int? /* closeStatus */,</p>

<p class=MsoNoSpacing>                        string /* closeStatusDescription
*/</p>

<p class=MsoNoSpacing>                    &gt;</p>

<p class=MsoNoSpacing>                &gt;</p>

<p class=MsoNoSpacing>            &gt;, </p>

<p class=MsoNoSpacing>            Func // CloseAsync</p>

<p class=MsoNoSpacing>            &lt;</p>

<p class=MsoNoSpacing>                int /* closeStatus */, </p>

<p class=MsoNoSpacing>                string /* closeDescription */, </p>

<p class=MsoNoSpacing>                CancellationToken /* cancel */, </p>

<p class=MsoNoSpacing>                Task</p>

<p class=MsoNoSpacing>            &gt;,</p>

<p class=MsoNoSpacing>            // Complete</p>

<p class=MsoNoSpacing>            Task</p>

<p class=MsoNoSpacing>        &gt;;</p>

<p class=MsoNoSpacing>&nbsp;</p>

<p class=MsoNoSpacing>The application provides this delegate in the response
Properties dictionary.  The server invokes it to provide the application with
delegates for SendAsync, ReceiveAsync, and CloseAsync.  The application uses
these delegates to communicate via the WebSocket.  The application does not have
direct control over frame boundaries, but it does control message boundaries. 
On completion (success or fail), the application MUST complete or fail the
returned Task.</p>

<p class=MsoNoSpacing>&nbsp;</p>

<p class=MsoNoSpacing>The values of messageType for SendAsync and ReceiveAsync MUST
match the opcodes defined in the RFC; 0x1 = Text, 0x2 = Binary, and 0x8 =
Close.  Ping and Pong control frames (0x9, 0xA) SHOULD NOT be exposed directly
to the application, but should be handled internally.</p>

<p class=MsoNoSpacing>&nbsp;</p>

<p class=MsoNoSpacing>Applications SHOULD follow the RFC guidelines regarding
CloseAsync (section 5.5.1).  The application SHOULD invoke CloseAsync when it
is done sending outgoing data.  The application MUST NOT attempt to send
additional data after sending a close frame.  The application MUST NOT attempt
any further receives once a close frame is received.  The application MAY
abortively terminate the connection at any time by completing the returned task,
optionally with an exception.  The application SHOULD NOT invoke any of the
delegates once it completes the returned task.</p>

</div>

</body>

</html>
